USE pharmacy_db;

-- Drop existing objects
DROP VIEW IF EXISTS vw_inventory_units;
DROP TABLE IF EXISTS returns;
DROP TABLE IF EXISTS inventory_intake;
DROP TABLE IF EXISTS sale_items;
DROP TABLE IF EXISTS sales;
DROP TABLE IF EXISTS inventory;
DROP TABLE IF EXISTS medicine_packaging;
DROP TABLE IF EXISTS packaging_types;
DROP TABLE IF EXISTS medicines;
DROP TABLE IF EXISTS patient_allergies;
DROP TABLE IF EXISTS patients;
DROP TABLE IF EXISTS user_sessions;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS suppliers;

-- 1) USERS & SESSIONS
CREATE TABLE users (
  id            INT                     NOT NULL AUTO_INCREMENT,
  full_name     VARCHAR(200)            NOT NULL,
  username      VARCHAR(100)            NOT NULL UNIQUE,
  password_hash VARCHAR(255)            NOT NULL,
  user_type     ENUM('Admin','Pharmacist') NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB CHARSET=utf8mb4;

CREATE TABLE user_sessions (
  session_id   INT       NOT NULL AUTO_INCREMENT,
  user_id      INT       NOT NULL,
  login_time   DATETIME  NOT NULL DEFAULT CURRENT_TIMESTAMP,
  logout_time  DATETIME  NULL,
  PRIMARY KEY (session_id),
  KEY (user_id),
  FOREIGN KEY (user_id) REFERENCES users(id)
    ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB CHARSET=utf8mb4;

-- 2) PATIENTS & ALLERGIES
CREATE TABLE patients (
  id                 INT                    NOT NULL AUTO_INCREMENT,
  full_name          VARCHAR(200)           NOT NULL,
  phone_number       VARCHAR(200)           NOT NULL,
  birth_date         DATE                   NOT NULL,
  registration_time  DATETIME               NOT NULL DEFAULT CURRENT_TIMESTAMP,
  sexual_orientation ENUM('Male','Female')  NOT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB CHARSET=utf8mb4;

CREATE TABLE patient_allergies (
  id               INT          NOT NULL AUTO_INCREMENT PRIMARY KEY,
  patient_id        INT          NOT NULL,
  active_ingredient VARCHAR(255) NOT NULL,
  reaction          VARCHAR(255) NULL,
  FOREIGN KEY (patient_id) REFERENCES patients(id)
    ON UPDATE CASCADE ON DELETE CASCADE
) ENGINE=InnoDB CHARSET=utf8mb4;

-- 3) MEDICINES: with strips_per_box
CREATE TABLE medicines (
  barcode           VARCHAR(50)    NOT NULL,
  name_en           VARCHAR(255)   NOT NULL,
  name_ar           VARCHAR(255)   NOT NULL,
  active_ingredient VARCHAR(255)   NOT NULL,
  dose              VARCHAR(20)    NOT NULL,
  medicine_type     ENUM('Tablet','Drink','Cream','Other') NOT NULL,
  price_per_box     DECIMAL(10,2)  NOT NULL,
  price_per_strip   DECIMAL(10,2)  NULL,
  strips_per_box    INT            NULL,
  company           VARCHAR(200)   NOT NULL,
  `use`             TEXT           NULL,
  last_updated      DATETIME       NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  origin            ENUM('Local','Imported') NOT NULL,
  PRIMARY KEY (barcode)
) ENGINE=InnoDB CHARSET=utf8mb4;

-- 4) PACKAGING TYPES & MAPPING
CREATE TABLE packaging_types (
  id   TINYINT            NOT NULL AUTO_INCREMENT,
  name ENUM('strip','box') NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY ux_pack (name)
) ENGINE=InnoDB CHARSET=utf8mb4;

CREATE TABLE medicine_packaging (
  barcode           VARCHAR(50) NOT NULL,
  packaging_type_id TINYINT     NOT NULL,
  PRIMARY KEY (barcode, packaging_type_id),
  FOREIGN KEY (barcode) REFERENCES medicines(barcode)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (packaging_type_id) REFERENCES packaging_types(id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=InnoDB CHARSET=utf8mb4;

-- 5) INVENTORY
CREATE TABLE inventory (
  barcode           VARCHAR(50) NOT NULL,
  packaging_type_id TINYINT     NOT NULL,
  quantity          INT         NOT NULL,
  expiry_date       DATE        NOT NULL,
  last_updated      DATETIME    NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (barcode, packaging_type_id, expiry_date),
  FOREIGN KEY (barcode, packaging_type_id)
    REFERENCES medicine_packaging(barcode, packaging_type_id)
      ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=InnoDB CHARSET=utf8mb4;

-- 6) SALES & ITEMS
CREATE TABLE sales (
  sale_id      INT           NOT NULL AUTO_INCREMENT,
  user_id      INT           NOT NULL,
  patient_id   INT           NULL,
  sale_time    DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP,
  discount     DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  total_amount DECIMAL(12,2) NOT NULL,
  amount_paid  DECIMAL(12,2) NOT NULL,
  change_due   DECIMAL(12,2) AS ((amount_paid - discount) - total_amount) STORED,
  PRIMARY KEY (sale_id),
  FOREIGN KEY (user_id) REFERENCES users(id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY (patient_id) REFERENCES patients(id)
    ON UPDATE CASCADE ON DELETE SET NULL
) ENGINE=InnoDB CHARSET=utf8mb4;

CREATE TABLE sale_items (
  sale_item_id      INT           NOT NULL AUTO_INCREMENT,
  sale_id           INT           NOT NULL,
  barcode           VARCHAR(50)   NOT NULL,
  packaging_type_id TINYINT       NOT NULL,
  quantity          INT           NOT NULL,
  unit_price        DECIMAL(10,2) NOT NULL,
  line_total        DECIMAL(12,2) AS (quantity * unit_price) STORED,
  PRIMARY KEY (sale_item_id),
  FOREIGN KEY (sale_id) REFERENCES sales(sale_id)
    ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (barcode, packaging_type_id)
    REFERENCES medicine_packaging(barcode, packaging_type_id)
      ON UPDATE CASCADE ON DELETE RESTRICT
) ENGINE=InnoDB CHARSET=utf8mb4;

-- 7) INVENTORY VIEW
CREATE VIEW vw_inventory_units AS
SELECT
  i.barcode,
  pt.name       AS packaging,
  i.quantity    AS packs_on_hand,
  i.expiry_date,
  i.last_updated
FROM inventory i
JOIN packaging_types pt ON pt.id = i.packaging_type_id;

-- 8) Suppliers
CREATE TABLE suppliers (
  supplier_id    INT AUTO_INCREMENT PRIMARY KEY,
  name           VARCHAR(200) NOT NULL,
  contact_name   VARCHAR(100),
  phone_number   VARCHAR(100),
  address        VARCHAR(255),
  email          VARCHAR(100)
);

-- 9) Inventory Intake Log
CREATE TABLE inventory_intake (
  intake_id           INT AUTO_INCREMENT PRIMARY KEY,
  barcode             VARCHAR(50) NOT NULL,
  packaging_type_id   TINYINT     NOT NULL,
  expiry_date         DATE        NOT NULL,
  quantity            INT         NOT NULL,
  intake_date         DATETIME    NOT NULL DEFAULT CURRENT_TIMESTAMP,
  supplier_id         INT         NOT NULL,
  invoice_number      VARCHAR(100),
  cost_per_unit       DECIMAL(10,2),
  user_id             INT,  -- who processed this intake
  FOREIGN KEY (barcode, packaging_type_id) REFERENCES medicine_packaging(barcode, packaging_type_id),
  FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id),
  FOREIGN KEY (user_id) REFERENCES users(id)
);

-- 10)  Returns/Refunds Table
CREATE TABLE returns (
  return_id      INT AUTO_INCREMENT PRIMARY KEY,
  sale_item_id   INT NOT NULL,
  quantity       INT NOT NULL,
  return_time    DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  reason         VARCHAR(255),
  processed_by   INT,
  FOREIGN KEY (sale_item_id) REFERENCES sale_items(sale_item_id),
  FOREIGN KEY (processed_by) REFERENCES users(id)
);
